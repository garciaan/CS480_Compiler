 [  S  ]  $ 
 [  [  S''  ]  $ 
 [  [  EXPR'  S'  ]  $ 
 [  [  STMT'  S'  ]  $ 
 [  [  while  EXPR  EXPRLIST  ]  S'  ]  $ 
 [  [  while  id  EXPRLIST  ]  S'  ]  $ 
 [  [  while  id  EXPR  EXPRLIST'  ]  S'  ]  $ 
 [  [  while  id  id  EXPRLIST'  ]  S'  ]  $ 
 [  [  while  id  id  ]  S'  ]  $ 
 [  [  while  id  id  ]  S  S'  ]  $ 
 [  [  while  id  id  ]  [  S''  S'  ]  $ 
 [  [  while  id  id  ]  [  EXPR'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  STMT'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  EXPR  EXPRLIST  ]  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  EXPRLIST  ]  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  EXPR  EXPRLIST'  ]  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  EXPRLIST'  ]  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  EXPRLIST  ]  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  EXPR  EXPRLIST'  ]  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  EXPRLIST'  ]  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  EXPRLIST  ]  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  EXPR  EXPRLIST'  ]  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  EXPRLIST'  ]  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  EXPRLIST  ]  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  EXPR  EXPRLIST'  ]  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  EXPRLIST'  ]  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  EXPRLIST  ]  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  EXPR  EXPRLIST'  ]  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  EXPRLIST'  ]  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  S  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  S''  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  EXPR'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  STMT'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  EXPR  EXPRLIST  ]  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  EXPRLIST  ]  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  EXPR  EXPRLIST'  ]  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  EXPRLIST'  ]  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  EXPRLIST  ]  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  EXPR  EXPRLIST'  ]  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  EXPRLIST'  ]  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  EXPRLIST  ]  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  EXPR  EXPRLIST'  ]  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  EXPRLIST'  ]  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  EXPRLIST  ]  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  EXPR  EXPRLIST'  ]  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  EXPRLIST'  ]  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  EXPRLIST  ]  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  EXPR  EXPRLIST'  ]  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  EXPRLIST'  ]  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  EXPRLIST  ]  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  EXPR  EXPRLIST'  ]  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  EXPRLIST'  ]  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  EXPRLIST  ]  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  EXPR  EXPRLIST'  ]  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  EXPRLIST'  ]  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  EXPRLIST  ]  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  EXPR  EXPRLIST'  ]  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  EXPRLIST'  ]  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  S  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  S''  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  EXPR'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  STMT'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  EXPR  EXPR  IFSTMT  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  EXPR'  EXPR  IFSTMT  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  OPER'  EXPR  IFSTMT  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  BINOP  OPER  OPER  ]  EXPR  IFSTMT  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  OPER  OPER  ]  EXPR  IFSTMT  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  OPER  ]  EXPR  IFSTMT  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  EXPR  IFSTMT  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  EXPR'  IFSTMT  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  OPER'  IFSTMT  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  OPER  ]  IFSTMT  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  CONST  ]  IFSTMT  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  IFSTMT  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  EXPR  ]  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  EXPR'  ]  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  OPER'  ]  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  BINOP  OPER  OPER  ]  ]  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  OPER  OPER  ]  ]  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  OPER  ]  ]  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  CONST  ]  ]  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  S  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  S''  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  EXPR'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  STMT'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  EXPR  EXPR  IFSTMT  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  EXPR'  EXPR  IFSTMT  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  OPER'  EXPR  IFSTMT  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  BINOP  OPER  OPER  ]  EXPR  IFSTMT  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  OPER  OPER  ]  EXPR  IFSTMT  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  OPER  ]  EXPR  IFSTMT  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  EXPR  IFSTMT  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  EXPR'  IFSTMT  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  OPER'  IFSTMT  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  OPER  ]  IFSTMT  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  CONST  ]  IFSTMT  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  IFSTMT  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  S  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  S''  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  EXPR'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  STMT'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  VARLIST  ]  ]  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  TYPE  ]  VARLIST'  ]  ]  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  VARLIST'  ]  ]  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  S  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  S''  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  EXPR'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  STMT'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  VARLIST  ]  ]  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  TYPE  ]  VARLIST'  ]  ]  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  VARLIST'  ]  ]  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  VARLIST  ]  ]  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  TYPE  ]  VARLIST'  ]  ]  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  VARLIST'  ]  ]  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  VARLIST  ]  ]  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  TYPE  ]  VARLIST'  ]  ]  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  VARLIST'  ]  ]  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  S  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  S''  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  STMT'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  OPER  ]  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  CONST  ]  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  S  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  S''  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  EXPR'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  OPER'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  OPER  ]  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  CONST  ]  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  S  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  S''  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  EXPR'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  OPER'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  BINOP  OPER  OPER  ]  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  OPER  OPER  ]  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  CONST  OPER  ]  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  OPER  ]  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  CONST  ]  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  S  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  S''  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  EXPR'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  OPER'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  OPER  NEGOP  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  CONST  NEGOP  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  NEGOP  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  OPER  ]  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  CONST  ]  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  S  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  S''  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  EXPR'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  OPER'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  BINOP  OPER  OPER  ]  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  OPER  OPER  ]  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  CONST  OPER  ]  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  OPER  ]  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  CONST  ]  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  S  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  S''  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  EXPR'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  OPER'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  BINOP  OPER  OPER  ]  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  OPER  OPER  ]  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  CONST  OPER  ]  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  OPER  ]  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  CONST  ]  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  S  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  S''  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  EXPR'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  OPER'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  BINOP  OPER  OPER  ]  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  OPER  OPER  ]  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  CONST  OPER  ]  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  OPER  ]  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  CONST  ]  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  S  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  S''  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  EXPR'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  OPER'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  BINOP  OPER  OPER  ]  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  OPER  OPER  ]  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  CONST  OPER  ]  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  OPER  ]  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  CONST  ]  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  S  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  S''  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  EXPR'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  OPER'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  BINOP  OPER  OPER  ]  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  =  OPER  OPER  ]  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  =  CONST  OPER  ]  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  =  int_l  OPER  ]  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  =  int_l  CONST  ]  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  =  int_l  int_l  ]  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  =  int_l  int_l  ]  S  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  =  int_l  int_l  ]  [  S''  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  =  int_l  int_l  ]  [  EXPR'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  =  int_l  int_l  ]  [  OPER'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  =  int_l  int_l  ]  [  BINOP  OPER  OPER  ]  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  =  int_l  int_l  ]  [  >  OPER  OPER  ]  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  =  int_l  int_l  ]  [  >  CONST  OPER  ]  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  =  int_l  int_l  ]  [  >  int_l  OPER  ]  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  =  int_l  int_l  ]  [  >  int_l  CONST  ]  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  =  int_l  int_l  ]  [  >  int_l  int_l  ]  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  =  int_l  int_l  ]  [  >  int_l  int_l  ]  S  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  =  int_l  int_l  ]  [  >  int_l  int_l  ]  [  S''  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  =  int_l  int_l  ]  [  >  int_l  int_l  ]  [  EXPR'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  =  int_l  int_l  ]  [  >  int_l  int_l  ]  [  OPER'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  =  int_l  int_l  ]  [  >  int_l  int_l  ]  [  BINOP  OPER  OPER  ]  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  =  int_l  int_l  ]  [  >  int_l  int_l  ]  [  >=  OPER  OPER  ]  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  =  int_l  int_l  ]  [  >  int_l  int_l  ]  [  >=  CONST  OPER  ]  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  =  int_l  int_l  ]  [  >  int_l  int_l  ]  [  >=  int_l  OPER  ]  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  =  int_l  int_l  ]  [  >  int_l  int_l  ]  [  >=  int_l  CONST  ]  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  =  int_l  int_l  ]  [  >  int_l  int_l  ]  [  >=  int_l  int_l  ]  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  =  int_l  int_l  ]  [  >  int_l  int_l  ]  [  >=  int_l  int_l  ]  S  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  =  int_l  int_l  ]  [  >  int_l  int_l  ]  [  >=  int_l  int_l  ]  [  S''  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  =  int_l  int_l  ]  [  >  int_l  int_l  ]  [  >=  int_l  int_l  ]  [  EXPR'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  =  int_l  int_l  ]  [  >  int_l  int_l  ]  [  >=  int_l  int_l  ]  [  OPER'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  =  int_l  int_l  ]  [  >  int_l  int_l  ]  [  >=  int_l  int_l  ]  [  BINOP  OPER  OPER  ]  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  =  int_l  int_l  ]  [  >  int_l  int_l  ]  [  >=  int_l  int_l  ]  [  <  OPER  OPER  ]  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  =  int_l  int_l  ]  [  >  int_l  int_l  ]  [  >=  int_l  int_l  ]  [  <  CONST  OPER  ]  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  =  int_l  int_l  ]  [  >  int_l  int_l  ]  [  >=  int_l  int_l  ]  [  <  int_l  OPER  ]  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  =  int_l  int_l  ]  [  >  int_l  int_l  ]  [  >=  int_l  int_l  ]  [  <  int_l  CONST  ]  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  =  int_l  int_l  ]  [  >  int_l  int_l  ]  [  >=  int_l  int_l  ]  [  <  int_l  int_l  ]  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  =  int_l  int_l  ]  [  >  int_l  int_l  ]  [  >=  int_l  int_l  ]  [  <  int_l  int_l  ]  S  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  =  int_l  int_l  ]  [  >  int_l  int_l  ]  [  >=  int_l  int_l  ]  [  <  int_l  int_l  ]  [  S''  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  =  int_l  int_l  ]  [  >  int_l  int_l  ]  [  >=  int_l  int_l  ]  [  <  int_l  int_l  ]  [  EXPR'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  =  int_l  int_l  ]  [  >  int_l  int_l  ]  [  >=  int_l  int_l  ]  [  <  int_l  int_l  ]  [  OPER'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  =  int_l  int_l  ]  [  >  int_l  int_l  ]  [  >=  int_l  int_l  ]  [  <  int_l  int_l  ]  [  BINOP  OPER  OPER  ]  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  =  int_l  int_l  ]  [  >  int_l  int_l  ]  [  >=  int_l  int_l  ]  [  <  int_l  int_l  ]  [  <=  OPER  OPER  ]  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  =  int_l  int_l  ]  [  >  int_l  int_l  ]  [  >=  int_l  int_l  ]  [  <  int_l  int_l  ]  [  <=  CONST  OPER  ]  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  =  int_l  int_l  ]  [  >  int_l  int_l  ]  [  >=  int_l  int_l  ]  [  <  int_l  int_l  ]  [  <=  int_l  OPER  ]  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  =  int_l  int_l  ]  [  >  int_l  int_l  ]  [  >=  int_l  int_l  ]  [  <  int_l  int_l  ]  [  <=  int_l  CONST  ]  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  =  int_l  int_l  ]  [  >  int_l  int_l  ]  [  >=  int_l  int_l  ]  [  <  int_l  int_l  ]  [  <=  int_l  int_l  ]  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  =  int_l  int_l  ]  [  >  int_l  int_l  ]  [  >=  int_l  int_l  ]  [  <  int_l  int_l  ]  [  <=  int_l  int_l  ]  S  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  =  int_l  int_l  ]  [  >  int_l  int_l  ]  [  >=  int_l  int_l  ]  [  <  int_l  int_l  ]  [  <=  int_l  int_l  ]  [  S''  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  =  int_l  int_l  ]  [  >  int_l  int_l  ]  [  >=  int_l  int_l  ]  [  <  int_l  int_l  ]  [  <=  int_l  int_l  ]  [  EXPR'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  =  int_l  int_l  ]  [  >  int_l  int_l  ]  [  >=  int_l  int_l  ]  [  <  int_l  int_l  ]  [  <=  int_l  int_l  ]  [  OPER'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  =  int_l  int_l  ]  [  >  int_l  int_l  ]  [  >=  int_l  int_l  ]  [  <  int_l  int_l  ]  [  <=  int_l  int_l  ]  [  BINOP  OPER  OPER  ]  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  =  int_l  int_l  ]  [  >  int_l  int_l  ]  [  >=  int_l  int_l  ]  [  <  int_l  int_l  ]  [  <=  int_l  int_l  ]  [  !=  OPER  OPER  ]  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  =  int_l  int_l  ]  [  >  int_l  int_l  ]  [  >=  int_l  int_l  ]  [  <  int_l  int_l  ]  [  <=  int_l  int_l  ]  [  !=  CONST  OPER  ]  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  =  int_l  int_l  ]  [  >  int_l  int_l  ]  [  >=  int_l  int_l  ]  [  <  int_l  int_l  ]  [  <=  int_l  int_l  ]  [  !=  int_l  OPER  ]  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  =  int_l  int_l  ]  [  >  int_l  int_l  ]  [  >=  int_l  int_l  ]  [  <  int_l  int_l  ]  [  <=  int_l  int_l  ]  [  !=  int_l  CONST  ]  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  =  int_l  int_l  ]  [  >  int_l  int_l  ]  [  >=  int_l  int_l  ]  [  <  int_l  int_l  ]  [  <=  int_l  int_l  ]  [  !=  int_l  int_l  ]  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  =  int_l  int_l  ]  [  >  int_l  int_l  ]  [  >=  int_l  int_l  ]  [  <  int_l  int_l  ]  [  <=  int_l  int_l  ]  [  !=  int_l  int_l  ]  S  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  =  int_l  int_l  ]  [  >  int_l  int_l  ]  [  >=  int_l  int_l  ]  [  <  int_l  int_l  ]  [  <=  int_l  int_l  ]  [  !=  int_l  int_l  ]  [  S''  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  =  int_l  int_l  ]  [  >  int_l  int_l  ]  [  >=  int_l  int_l  ]  [  <  int_l  int_l  ]  [  <=  int_l  int_l  ]  [  !=  int_l  int_l  ]  [  EXPR'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  =  int_l  int_l  ]  [  >  int_l  int_l  ]  [  >=  int_l  int_l  ]  [  <  int_l  int_l  ]  [  <=  int_l  int_l  ]  [  !=  int_l  int_l  ]  [  OPER'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  =  int_l  int_l  ]  [  >  int_l  int_l  ]  [  >=  int_l  int_l  ]  [  <  int_l  int_l  ]  [  <=  int_l  int_l  ]  [  !=  int_l  int_l  ]  [  BINOP  OPER  OPER  ]  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  =  int_l  int_l  ]  [  >  int_l  int_l  ]  [  >=  int_l  int_l  ]  [  <  int_l  int_l  ]  [  <=  int_l  int_l  ]  [  !=  int_l  int_l  ]  [  or  OPER  OPER  ]  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  =  int_l  int_l  ]  [  >  int_l  int_l  ]  [  >=  int_l  int_l  ]  [  <  int_l  int_l  ]  [  <=  int_l  int_l  ]  [  !=  int_l  int_l  ]  [  or  CONST  OPER  ]  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  =  int_l  int_l  ]  [  >  int_l  int_l  ]  [  >=  int_l  int_l  ]  [  <  int_l  int_l  ]  [  <=  int_l  int_l  ]  [  !=  int_l  int_l  ]  [  or  true  OPER  ]  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  =  int_l  int_l  ]  [  >  int_l  int_l  ]  [  >=  int_l  int_l  ]  [  <  int_l  int_l  ]  [  <=  int_l  int_l  ]  [  !=  int_l  int_l  ]  [  or  true  CONST  ]  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  =  int_l  int_l  ]  [  >  int_l  int_l  ]  [  >=  int_l  int_l  ]  [  <  int_l  int_l  ]  [  <=  int_l  int_l  ]  [  !=  int_l  int_l  ]  [  or  true  false  ]  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  =  int_l  int_l  ]  [  >  int_l  int_l  ]  [  >=  int_l  int_l  ]  [  <  int_l  int_l  ]  [  <=  int_l  int_l  ]  [  !=  int_l  int_l  ]  [  or  true  false  ]  S  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  =  int_l  int_l  ]  [  >  int_l  int_l  ]  [  >=  int_l  int_l  ]  [  <  int_l  int_l  ]  [  <=  int_l  int_l  ]  [  !=  int_l  int_l  ]  [  or  true  false  ]  [  S''  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  =  int_l  int_l  ]  [  >  int_l  int_l  ]  [  >=  int_l  int_l  ]  [  <  int_l  int_l  ]  [  <=  int_l  int_l  ]  [  !=  int_l  int_l  ]  [  or  true  false  ]  [  EXPR'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  =  int_l  int_l  ]  [  >  int_l  int_l  ]  [  >=  int_l  int_l  ]  [  <  int_l  int_l  ]  [  <=  int_l  int_l  ]  [  !=  int_l  int_l  ]  [  or  true  false  ]  [  OPER'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  =  int_l  int_l  ]  [  >  int_l  int_l  ]  [  >=  int_l  int_l  ]  [  <  int_l  int_l  ]  [  <=  int_l  int_l  ]  [  !=  int_l  int_l  ]  [  or  true  false  ]  [  BINOP  OPER  OPER  ]  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  =  int_l  int_l  ]  [  >  int_l  int_l  ]  [  >=  int_l  int_l  ]  [  <  int_l  int_l  ]  [  <=  int_l  int_l  ]  [  !=  int_l  int_l  ]  [  or  true  false  ]  [  and  OPER  OPER  ]  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  =  int_l  int_l  ]  [  >  int_l  int_l  ]  [  >=  int_l  int_l  ]  [  <  int_l  int_l  ]  [  <=  int_l  int_l  ]  [  !=  int_l  int_l  ]  [  or  true  false  ]  [  and  CONST  OPER  ]  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  =  int_l  int_l  ]  [  >  int_l  int_l  ]  [  >=  int_l  int_l  ]  [  <  int_l  int_l  ]  [  <=  int_l  int_l  ]  [  !=  int_l  int_l  ]  [  or  true  false  ]  [  and  true  OPER  ]  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  =  int_l  int_l  ]  [  >  int_l  int_l  ]  [  >=  int_l  int_l  ]  [  <  int_l  int_l  ]  [  <=  int_l  int_l  ]  [  !=  int_l  int_l  ]  [  or  true  false  ]  [  and  true  CONST  ]  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  =  int_l  int_l  ]  [  >  int_l  int_l  ]  [  >=  int_l  int_l  ]  [  <  int_l  int_l  ]  [  <=  int_l  int_l  ]  [  !=  int_l  int_l  ]  [  or  true  false  ]  [  and  true  false  ]  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  =  int_l  int_l  ]  [  >  int_l  int_l  ]  [  >=  int_l  int_l  ]  [  <  int_l  int_l  ]  [  <=  int_l  int_l  ]  [  !=  int_l  int_l  ]  [  or  true  false  ]  [  and  true  false  ]  S  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  =  int_l  int_l  ]  [  >  int_l  int_l  ]  [  >=  int_l  int_l  ]  [  <  int_l  int_l  ]  [  <=  int_l  int_l  ]  [  !=  int_l  int_l  ]  [  or  true  false  ]  [  and  true  false  ]  [  S''  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  =  int_l  int_l  ]  [  >  int_l  int_l  ]  [  >=  int_l  int_l  ]  [  <  int_l  int_l  ]  [  <=  int_l  int_l  ]  [  !=  int_l  int_l  ]  [  or  true  false  ]  [  and  true  false  ]  [  EXPR'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  =  int_l  int_l  ]  [  >  int_l  int_l  ]  [  >=  int_l  int_l  ]  [  <  int_l  int_l  ]  [  <=  int_l  int_l  ]  [  !=  int_l  int_l  ]  [  or  true  false  ]  [  and  true  false  ]  [  OPER'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  =  int_l  int_l  ]  [  >  int_l  int_l  ]  [  >=  int_l  int_l  ]  [  <  int_l  int_l  ]  [  <=  int_l  int_l  ]  [  !=  int_l  int_l  ]  [  or  true  false  ]  [  and  true  false  ]  [  -  OPER  NEGOP  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  =  int_l  int_l  ]  [  >  int_l  int_l  ]  [  >=  int_l  int_l  ]  [  <  int_l  int_l  ]  [  <=  int_l  int_l  ]  [  !=  int_l  int_l  ]  [  or  true  false  ]  [  and  true  false  ]  [  -  CONST  NEGOP  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  =  int_l  int_l  ]  [  >  int_l  int_l  ]  [  >=  int_l  int_l  ]  [  <  int_l  int_l  ]  [  <=  int_l  int_l  ]  [  !=  int_l  int_l  ]  [  or  true  false  ]  [  and  true  false  ]  [  -  real_l  NEGOP  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  =  int_l  int_l  ]  [  >  int_l  int_l  ]  [  >=  int_l  int_l  ]  [  <  int_l  int_l  ]  [  <=  int_l  int_l  ]  [  !=  int_l  int_l  ]  [  or  true  false  ]  [  and  true  false  ]  [  -  real_l  ]  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  =  int_l  int_l  ]  [  >  int_l  int_l  ]  [  >=  int_l  int_l  ]  [  <  int_l  int_l  ]  [  <=  int_l  int_l  ]  [  !=  int_l  int_l  ]  [  or  true  false  ]  [  and  true  false  ]  [  -  real_l  ]  S  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  =  int_l  int_l  ]  [  >  int_l  int_l  ]  [  >=  int_l  int_l  ]  [  <  int_l  int_l  ]  [  <=  int_l  int_l  ]  [  !=  int_l  int_l  ]  [  or  true  false  ]  [  and  true  false  ]  [  -  real_l  ]  [  S''  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  =  int_l  int_l  ]  [  >  int_l  int_l  ]  [  >=  int_l  int_l  ]  [  <  int_l  int_l  ]  [  <=  int_l  int_l  ]  [  !=  int_l  int_l  ]  [  or  true  false  ]  [  and  true  false  ]  [  -  real_l  ]  [  EXPR'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  =  int_l  int_l  ]  [  >  int_l  int_l  ]  [  >=  int_l  int_l  ]  [  <  int_l  int_l  ]  [  <=  int_l  int_l  ]  [  !=  int_l  int_l  ]  [  or  true  false  ]  [  and  true  false  ]  [  -  real_l  ]  [  OPER'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  =  int_l  int_l  ]  [  >  int_l  int_l  ]  [  >=  int_l  int_l  ]  [  <  int_l  int_l  ]  [  <=  int_l  int_l  ]  [  !=  int_l  int_l  ]  [  or  true  false  ]  [  and  true  false  ]  [  -  real_l  ]  [  UNOP  OPER  ]  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  =  int_l  int_l  ]  [  >  int_l  int_l  ]  [  >=  int_l  int_l  ]  [  <  int_l  int_l  ]  [  <=  int_l  int_l  ]  [  !=  int_l  int_l  ]  [  or  true  false  ]  [  and  true  false  ]  [  -  real_l  ]  [  sin  OPER  ]  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  =  int_l  int_l  ]  [  >  int_l  int_l  ]  [  >=  int_l  int_l  ]  [  <  int_l  int_l  ]  [  <=  int_l  int_l  ]  [  !=  int_l  int_l  ]  [  or  true  false  ]  [  and  true  false  ]  [  -  real_l  ]  [  sin  CONST  ]  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  =  int_l  int_l  ]  [  >  int_l  int_l  ]  [  >=  int_l  int_l  ]  [  <  int_l  int_l  ]  [  <=  int_l  int_l  ]  [  !=  int_l  int_l  ]  [  or  true  false  ]  [  and  true  false  ]  [  -  real_l  ]  [  sin  real_l  ]  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  =  int_l  int_l  ]  [  >  int_l  int_l  ]  [  >=  int_l  int_l  ]  [  <  int_l  int_l  ]  [  <=  int_l  int_l  ]  [  !=  int_l  int_l  ]  [  or  true  false  ]  [  and  true  false  ]  [  -  real_l  ]  [  sin  real_l  ]  S  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  =  int_l  int_l  ]  [  >  int_l  int_l  ]  [  >=  int_l  int_l  ]  [  <  int_l  int_l  ]  [  <=  int_l  int_l  ]  [  !=  int_l  int_l  ]  [  or  true  false  ]  [  and  true  false  ]  [  -  real_l  ]  [  sin  real_l  ]  [  S''  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  =  int_l  int_l  ]  [  >  int_l  int_l  ]  [  >=  int_l  int_l  ]  [  <  int_l  int_l  ]  [  <=  int_l  int_l  ]  [  !=  int_l  int_l  ]  [  or  true  false  ]  [  and  true  false  ]  [  -  real_l  ]  [  sin  real_l  ]  [  EXPR'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  =  int_l  int_l  ]  [  >  int_l  int_l  ]  [  >=  int_l  int_l  ]  [  <  int_l  int_l  ]  [  <=  int_l  int_l  ]  [  !=  int_l  int_l  ]  [  or  true  false  ]  [  and  true  false  ]  [  -  real_l  ]  [  sin  real_l  ]  [  OPER'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  =  int_l  int_l  ]  [  >  int_l  int_l  ]  [  >=  int_l  int_l  ]  [  <  int_l  int_l  ]  [  <=  int_l  int_l  ]  [  !=  int_l  int_l  ]  [  or  true  false  ]  [  and  true  false  ]  [  -  real_l  ]  [  sin  real_l  ]  [  UNOP  OPER  ]  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  =  int_l  int_l  ]  [  >  int_l  int_l  ]  [  >=  int_l  int_l  ]  [  <  int_l  int_l  ]  [  <=  int_l  int_l  ]  [  !=  int_l  int_l  ]  [  or  true  false  ]  [  and  true  false  ]  [  -  real_l  ]  [  sin  real_l  ]  [  cos  OPER  ]  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  =  int_l  int_l  ]  [  >  int_l  int_l  ]  [  >=  int_l  int_l  ]  [  <  int_l  int_l  ]  [  <=  int_l  int_l  ]  [  !=  int_l  int_l  ]  [  or  true  false  ]  [  and  true  false  ]  [  -  real_l  ]  [  sin  real_l  ]  [  cos  CONST  ]  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  =  int_l  int_l  ]  [  >  int_l  int_l  ]  [  >=  int_l  int_l  ]  [  <  int_l  int_l  ]  [  <=  int_l  int_l  ]  [  !=  int_l  int_l  ]  [  or  true  false  ]  [  and  true  false  ]  [  -  real_l  ]  [  sin  real_l  ]  [  cos  int_l  ]  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  =  int_l  int_l  ]  [  >  int_l  int_l  ]  [  >=  int_l  int_l  ]  [  <  int_l  int_l  ]  [  <=  int_l  int_l  ]  [  !=  int_l  int_l  ]  [  or  true  false  ]  [  and  true  false  ]  [  -  real_l  ]  [  sin  real_l  ]  [  cos  int_l  ]  S  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  =  int_l  int_l  ]  [  >  int_l  int_l  ]  [  >=  int_l  int_l  ]  [  <  int_l  int_l  ]  [  <=  int_l  int_l  ]  [  !=  int_l  int_l  ]  [  or  true  false  ]  [  and  true  false  ]  [  -  real_l  ]  [  sin  real_l  ]  [  cos  int_l  ]  [  S''  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  =  int_l  int_l  ]  [  >  int_l  int_l  ]  [  >=  int_l  int_l  ]  [  <  int_l  int_l  ]  [  <=  int_l  int_l  ]  [  !=  int_l  int_l  ]  [  or  true  false  ]  [  and  true  false  ]  [  -  real_l  ]  [  sin  real_l  ]  [  cos  int_l  ]  [  EXPR'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  =  int_l  int_l  ]  [  >  int_l  int_l  ]  [  >=  int_l  int_l  ]  [  <  int_l  int_l  ]  [  <=  int_l  int_l  ]  [  !=  int_l  int_l  ]  [  or  true  false  ]  [  and  true  false  ]  [  -  real_l  ]  [  sin  real_l  ]  [  cos  int_l  ]  [  OPER'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  =  int_l  int_l  ]  [  >  int_l  int_l  ]  [  >=  int_l  int_l  ]  [  <  int_l  int_l  ]  [  <=  int_l  int_l  ]  [  !=  int_l  int_l  ]  [  or  true  false  ]  [  and  true  false  ]  [  -  real_l  ]  [  sin  real_l  ]  [  cos  int_l  ]  [  UNOP  OPER  ]  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  =  int_l  int_l  ]  [  >  int_l  int_l  ]  [  >=  int_l  int_l  ]  [  <  int_l  int_l  ]  [  <=  int_l  int_l  ]  [  !=  int_l  int_l  ]  [  or  true  false  ]  [  and  true  false  ]  [  -  real_l  ]  [  sin  real_l  ]  [  cos  int_l  ]  [  tan  OPER  ]  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  =  int_l  int_l  ]  [  >  int_l  int_l  ]  [  >=  int_l  int_l  ]  [  <  int_l  int_l  ]  [  <=  int_l  int_l  ]  [  !=  int_l  int_l  ]  [  or  true  false  ]  [  and  true  false  ]  [  -  real_l  ]  [  sin  real_l  ]  [  cos  int_l  ]  [  tan  CONST  ]  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  =  int_l  int_l  ]  [  >  int_l  int_l  ]  [  >=  int_l  int_l  ]  [  <  int_l  int_l  ]  [  <=  int_l  int_l  ]  [  !=  int_l  int_l  ]  [  or  true  false  ]  [  and  true  false  ]  [  -  real_l  ]  [  sin  real_l  ]  [  cos  int_l  ]  [  tan  real_l  ]  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  =  int_l  int_l  ]  [  >  int_l  int_l  ]  [  >=  int_l  int_l  ]  [  <  int_l  int_l  ]  [  <=  int_l  int_l  ]  [  !=  int_l  int_l  ]  [  or  true  false  ]  [  and  true  false  ]  [  -  real_l  ]  [  sin  real_l  ]  [  cos  int_l  ]  [  tan  real_l  ]  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  =  int_l  int_l  ]  [  >  int_l  int_l  ]  [  >=  int_l  int_l  ]  [  <  int_l  int_l  ]  [  <=  int_l  int_l  ]  [  !=  int_l  int_l  ]  [  or  true  false  ]  [  and  true  false  ]  [  -  real_l  ]  [  sin  real_l  ]  [  cos  int_l  ]  [  tan  real_l  ]  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  =  int_l  int_l  ]  [  >  int_l  int_l  ]  [  >=  int_l  int_l  ]  [  <  int_l  int_l  ]  [  <=  int_l  int_l  ]  [  !=  int_l  int_l  ]  [  or  true  false  ]  [  and  true  false  ]  [  -  real_l  ]  [  sin  real_l  ]  [  cos  int_l  ]  [  tan  real_l  ]  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  =  int_l  int_l  ]  [  >  int_l  int_l  ]  [  >=  int_l  int_l  ]  [  <  int_l  int_l  ]  [  <=  int_l  int_l  ]  [  !=  int_l  int_l  ]  [  or  true  false  ]  [  and  true  false  ]  [  -  real_l  ]  [  sin  real_l  ]  [  cos  int_l  ]  [  tan  real_l  ]  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  =  int_l  int_l  ]  [  >  int_l  int_l  ]  [  >=  int_l  int_l  ]  [  <  int_l  int_l  ]  [  <=  int_l  int_l  ]  [  !=  int_l  int_l  ]  [  or  true  false  ]  [  and  true  false  ]  [  -  real_l  ]  [  sin  real_l  ]  [  cos  int_l  ]  [  tan  real_l  ]  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  =  int_l  int_l  ]  [  >  int_l  int_l  ]  [  >=  int_l  int_l  ]  [  <  int_l  int_l  ]  [  <=  int_l  int_l  ]  [  !=  int_l  int_l  ]  [  or  true  false  ]  [  and  true  false  ]  [  -  real_l  ]  [  sin  real_l  ]  [  cos  int_l  ]  [  tan  real_l  ]  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  =  int_l  int_l  ]  [  >  int_l  int_l  ]  [  >=  int_l  int_l  ]  [  <  int_l  int_l  ]  [  <=  int_l  int_l  ]  [  !=  int_l  int_l  ]  [  or  true  false  ]  [  and  true  false  ]  [  -  real_l  ]  [  sin  real_l  ]  [  cos  int_l  ]  [  tan  real_l  ]  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  =  int_l  int_l  ]  [  >  int_l  int_l  ]  [  >=  int_l  int_l  ]  [  <  int_l  int_l  ]  [  <=  int_l  int_l  ]  [  !=  int_l  int_l  ]  [  or  true  false  ]  [  and  true  false  ]  [  -  real_l  ]  [  sin  real_l  ]  [  cos  int_l  ]  [  tan  real_l  ]  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  =  int_l  int_l  ]  [  >  int_l  int_l  ]  [  >=  int_l  int_l  ]  [  <  int_l  int_l  ]  [  <=  int_l  int_l  ]  [  !=  int_l  int_l  ]  [  or  true  false  ]  [  and  true  false  ]  [  -  real_l  ]  [  sin  real_l  ]  [  cos  int_l  ]  [  tan  real_l  ]  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  =  int_l  int_l  ]  [  >  int_l  int_l  ]  [  >=  int_l  int_l  ]  [  <  int_l  int_l  ]  [  <=  int_l  int_l  ]  [  !=  int_l  int_l  ]  [  or  true  false  ]  [  and  true  false  ]  [  -  real_l  ]  [  sin  real_l  ]  [  cos  int_l  ]  [  tan  real_l  ]  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  =  int_l  int_l  ]  [  >  int_l  int_l  ]  [  >=  int_l  int_l  ]  [  <  int_l  int_l  ]  [  <=  int_l  int_l  ]  [  !=  int_l  int_l  ]  [  or  true  false  ]  [  and  true  false  ]  [  -  real_l  ]  [  sin  real_l  ]  [  cos  int_l  ]  [  tan  real_l  ]  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  =  int_l  int_l  ]  [  >  int_l  int_l  ]  [  >=  int_l  int_l  ]  [  <  int_l  int_l  ]  [  <=  int_l  int_l  ]  [  !=  int_l  int_l  ]  [  or  true  false  ]  [  and  true  false  ]  [  -  real_l  ]  [  sin  real_l  ]  [  cos  int_l  ]  [  tan  real_l  ]  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  =  int_l  int_l  ]  [  >  int_l  int_l  ]  [  >=  int_l  int_l  ]  [  <  int_l  int_l  ]  [  <=  int_l  int_l  ]  [  !=  int_l  int_l  ]  [  or  true  false  ]  [  and  true  false  ]  [  -  real_l  ]  [  sin  real_l  ]  [  cos  int_l  ]  [  tan  real_l  ]  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  =  int_l  int_l  ]  [  >  int_l  int_l  ]  [  >=  int_l  int_l  ]  [  <  int_l  int_l  ]  [  <=  int_l  int_l  ]  [  !=  int_l  int_l  ]  [  or  true  false  ]  [  and  true  false  ]  [  -  real_l  ]  [  sin  real_l  ]  [  cos  int_l  ]  [  tan  real_l  ]  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  =  int_l  int_l  ]  [  >  int_l  int_l  ]  [  >=  int_l  int_l  ]  [  <  int_l  int_l  ]  [  <=  int_l  int_l  ]  [  !=  int_l  int_l  ]  [  or  true  false  ]  [  and  true  false  ]  [  -  real_l  ]  [  sin  real_l  ]  [  cos  int_l  ]  [  tan  real_l  ]  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  =  int_l  int_l  ]  [  >  int_l  int_l  ]  [  >=  int_l  int_l  ]  [  <  int_l  int_l  ]  [  <=  int_l  int_l  ]  [  !=  int_l  int_l  ]  [  or  true  false  ]  [  and  true  false  ]  [  -  real_l  ]  [  sin  real_l  ]  [  cos  int_l  ]  [  tan  real_l  ]  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  =  int_l  int_l  ]  [  >  int_l  int_l  ]  [  >=  int_l  int_l  ]  [  <  int_l  int_l  ]  [  <=  int_l  int_l  ]  [  !=  int_l  int_l  ]  [  or  true  false  ]  [  and  true  false  ]  [  -  real_l  ]  [  sin  real_l  ]  [  cos  int_l  ]  [  tan  real_l  ]  S'  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  =  int_l  int_l  ]  [  >  int_l  int_l  ]  [  >=  int_l  int_l  ]  [  <  int_l  int_l  ]  [  <=  int_l  int_l  ]  [  !=  int_l  int_l  ]  [  or  true  false  ]  [  and  true  false  ]  [  -  real_l  ]  [  sin  real_l  ]  [  cos  int_l  ]  [  tan  real_l  ]  S'  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  =  int_l  int_l  ]  [  >  int_l  int_l  ]  [  >=  int_l  int_l  ]  [  <  int_l  int_l  ]  [  <=  int_l  int_l  ]  [  !=  int_l  int_l  ]  [  or  true  false  ]  [  and  true  false  ]  [  -  real_l  ]  [  sin  real_l  ]  [  cos  int_l  ]  [  tan  real_l  ]  S'  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  =  int_l  int_l  ]  [  >  int_l  int_l  ]  [  >=  int_l  int_l  ]  [  <  int_l  int_l  ]  [  <=  int_l  int_l  ]  [  !=  int_l  int_l  ]  [  or  true  false  ]  [  and  true  false  ]  [  -  real_l  ]  [  sin  real_l  ]  [  cos  int_l  ]  [  tan  real_l  ]  S'  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  =  int_l  int_l  ]  [  >  int_l  int_l  ]  [  >=  int_l  int_l  ]  [  <  int_l  int_l  ]  [  <=  int_l  int_l  ]  [  !=  int_l  int_l  ]  [  or  true  false  ]  [  and  true  false  ]  [  -  real_l  ]  [  sin  real_l  ]  [  cos  int_l  ]  [  tan  real_l  ]  S'  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  =  int_l  int_l  ]  [  >  int_l  int_l  ]  [  >=  int_l  int_l  ]  [  <  int_l  int_l  ]  [  <=  int_l  int_l  ]  [  !=  int_l  int_l  ]  [  or  true  false  ]  [  and  true  false  ]  [  -  real_l  ]  [  sin  real_l  ]  [  cos  int_l  ]  [  tan  real_l  ]  S'  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  =  int_l  int_l  ]  [  >  int_l  int_l  ]  [  >=  int_l  int_l  ]  [  <  int_l  int_l  ]  [  <=  int_l  int_l  ]  [  !=  int_l  int_l  ]  [  or  true  false  ]  [  and  true  false  ]  [  -  real_l  ]  [  sin  real_l  ]  [  cos  int_l  ]  [  tan  real_l  ]  S'  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  =  int_l  int_l  ]  [  >  int_l  int_l  ]  [  >=  int_l  int_l  ]  [  <  int_l  int_l  ]  [  <=  int_l  int_l  ]  [  !=  int_l  int_l  ]  [  or  true  false  ]  [  and  true  false  ]  [  -  real_l  ]  [  sin  real_l  ]  [  cos  int_l  ]  [  tan  real_l  ]  S'  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  =  int_l  int_l  ]  [  >  int_l  int_l  ]  [  >=  int_l  int_l  ]  [  <  int_l  int_l  ]  [  <=  int_l  int_l  ]  [  !=  int_l  int_l  ]  [  or  true  false  ]  [  and  true  false  ]  [  -  real_l  ]  [  sin  real_l  ]  [  cos  int_l  ]  [  tan  real_l  ]  S'  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  =  int_l  int_l  ]  [  >  int_l  int_l  ]  [  >=  int_l  int_l  ]  [  <  int_l  int_l  ]  [  <=  int_l  int_l  ]  [  !=  int_l  int_l  ]  [  or  true  false  ]  [  and  true  false  ]  [  -  real_l  ]  [  sin  real_l  ]  [  cos  int_l  ]  [  tan  real_l  ]  S'  ]  $ 
 [  [  while  id  id  ]  [  while  id  id  id  id  id  id  ]  [  while  id  id  id  id  id  id  id  id  id  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  [  +  id  int_l  ]  ]  [  if  [  or  id  id  ]  [  :=  id  int_l  ]  ]  [  let  [  [  id  string  ]  ]  ]  [  let  [  [  id  string  ]  [  id  string  ]  [  id  string  ]  ]  ]  [  stdout  string_l  ]  [  :=  id  int_l  ]  [  +  int_l  int_l  ]  [  -  int_l  int_l  ]  [  *  int_l  int_l  ]  [  /  int_l  int_l  ]  [  %  int_l  int_l  ]  [  ^  int_l  int_l  ]  [  =  int_l  int_l  ]  [  >  int_l  int_l  ]  [  >=  int_l  int_l  ]  [  <  int_l  int_l  ]  [  <=  int_l  int_l  ]  [  !=  int_l  int_l  ]  [  or  true  false  ]  [  and  true  false  ]  [  -  real_l  ]  [  sin  real_l  ]  [  cos  int_l  ]  [  tan  real_l  ]  ]  $ 
Pass_Test_1.txt accepted!
